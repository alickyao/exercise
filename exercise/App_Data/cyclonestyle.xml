<?xml version="1.0"?>
<doc>
    <assembly>
        <name>cyclonestyle</name>
    </assembly>
    <members>
        <member name="M:cyclonestyle.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:cyclonestyle.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:cyclonestyle.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,cyclonestyle.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,cyclonestyle.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:cyclonestyle.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},cyclonestyle.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:cyclonestyle.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:cyclonestyle.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.#ctor(cyclonestyle.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:cyclonestyle.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,cyclonestyle.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:cyclonestyle.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:cyclonestyle.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:cyclonestyle.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:cyclonestyle.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:cyclonestyle.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:cyclonestyle.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:cyclonestyle.BLL.DocumentResourceService">
            <summary>
            资源文档管理类
            </summary>
        </member>
        <member name="P:cyclonestyle.BLL.DocumentResourceService.Document">
            <summary>
            资源文档
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.DocumentResourceService.Save">
            <summary>
            新增或保存资源文档
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.DocumentResourceService.SearchDocument(cyclonestyle.Models.SearchDocumentsResourceListRequestModel)">
            <summary>
            查询文档信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.DocumentResourceService.DelDocument(System.String)">
            <summary>
            删除文档
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.DocumentResourceService.SortDocuments(cyclonestyle.Models.SortDocumentsRequest)">
            <summary>
            文档批量排序
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.DocumentResourceService.GetAllDocumentsGroupInfo">
            <summary>
            获取所有已存在的分组
            </summary>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.easemobInterFaceService">
            <summary>
            环信移动客服与通信
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.easemobInterFaceService.appName">
            <summary>
            环信关联App名称
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.easemobInterFaceService.orgName">
            <summary>
            环信注册的企业名称
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.easemobInterFaceService.kefuUserName">
            <summary>
            环信移动客服关联环信IM用户名
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.easemobInterFaceService.easemobUrl">
            <summary>
            远程地址
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.easemobInterFaceService.queryToken">
            <summary>
            获取令牌
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.easemobInterFaceService.RegisterUser(cyclonestyle.Models.RegisterUserEasemobRequestModel)">
            <summary>
            在环信注册新的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.easemobInterFaceService.SendMsg(cyclonestyle.Models.EasemobSendTextMessageRequestModel)">
            <summary>
            发送文本消息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.easemobInterFaceService.SendImgMsg(cyclonestyle.Models.EasemobSendIMgMessageRequestModel)">
            <summary>
            发送图片消息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.easemobInterFaceService.SendAudioMsg(cyclonestyle.Models.EasemobSendAudioMessageRequestModel)">
            <summary>
            发送语音消息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.easemobInterFaceService.RequestUrl(System.String,System.String,System.String,System.String)">
            <summary>
            环信接口调用
            </summary>
            <param name="url">接口url地址</param>
            <param name="method">接口方法POST，GET，PUT，DELETE</param>
            <param name="datas">接口调用请求参数</param>
            <param name="token">接口调用令牌，只有获取令牌时为空，其他操作必须有值</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.easemobInterFaceService.HttpUploadFile(System.String,System.String)">
            <summary>
            Http上传文件
            </summary>
            <param name="url">目标服务器地址</param>
            <param name="path">文件的地址</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.GTuiPushInterFaceService">
            <summary>
            个推推送接口服务
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.GTuiPushInterFaceService.IsOffline">
            <summary>
            用户当前不在线时，是否离线存储,可选
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.GTuiPushInterFaceService.OfflineExpireTime">
            <summary>
            离线有效时间，单位为毫秒，可选
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.GTuiPushInterFaceService.PushNetWorkType">
            <summary>
            判断是否客户端是否wifi环境下推送，1为在WIFI环境下，0为非WIFI环境
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.GTuiPushInterFaceService.PushMessage(cyclonestyle.Models.SendGeTuiPushBySetRequestModel)">
            <summary>
            发送推送[目前仅支持传透和通知，支持Android和IOS]
            </summary>
            <param name="condtion"></param>
        </member>
        <member name="M:cyclonestyle.BLL.GTuiPushInterFaceService.PushMessageToList">
            <summary>
            给多个用户发送推送(DEMO)
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.GTuiPushInterFaceService.PushMessageToSingle">
            <summary>
            给单个用户发送推送(DEMO)
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.GTuiPushInterFaceService.TransmissionTemplateDemo">
            <summary>
            透传模板
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.GTuiPushInterFaceService.NotificationTemplateDemo">
            <summary>
            通知透传模板
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.GTuiPushInterFaceService.LinkTemplateDemo">
            <summary>
            通知链接模板
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.GTuiPushInterFaceService.NotyPopLoadTemplateDemo">
            <summary>
            通知弹框下载模板
            </summary>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.Helps">
            <summary>
            一些公共的方法组
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.Helps.GetTimeId">
            <summary>
            获取时间ID（用于创造可读性比较强的编号，格式yyMMddHHmmss_ffff）
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.Helps.GetShotContent(System.String,System.Int32,System.String)">
            <summary>
            清除HTML标签并截取字符串
            </summary>
            <param name="Content">要截取的字符串</param>
            <param name="length">长度，如果字符串长度大于指定的长度则截取字符串</param>
            <param name="s">截取后最后添加到文本后面的字符串</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.Helps.NoHTML(System.String)">
            <summary>
            去除HTML标记
            </summary>
            <param name="Htmlstring"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.Helps.ConvertDateTimeInt(System.DateTime)">
            <summary>
            将c# DateTime时间格式转换为Unix时间戳格式
            </summary>
            <param name="time">时间</param>
            <returns>double</returns>
        </member>
        <member name="M:cyclonestyle.BLL.Helps.MD5(System.String)">
            <summary>
            md5加密，返回小写字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.HttpRequestHelp">
            <summary>
            发送HTTP请求方法组
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.HttpRequestHelp.Get(System.String)">
            <summary>
            Get
            </summary>
            <param name="url">地址</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.HttpRequestHelp.Post(System.String,System.String)">
            <summary>
            Post
            </summary>
            <param name="url">地址</param>
            <param name="postData">参数</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.HttpRequestHelp.Send(System.String,System.String,System.String)">
            <summary>
            发送
            </summary>
            <param name="verb">方式</param>
            <param name="url">地址</param>
            <param name="postData">参数</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.SearilizeObject">
            <summary>
            序列化与翻序列化
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.SearilizeObject.Searilize(System.String,System.Type,System.Object)">
            <summary>
            序列化
            </summary>
            <param name="format"></param>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SearilizeObject.Searilize(System.String,System.Type,System.Object,System.Type)">
            <summary>
            序列化
            </summary>
            <param name="format"></param>
            <param name="type"></param>
            <param name="value"></param>
            <param name="extendType"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SearilizeObject.Deserialize``1(System.String,System.String)">
            <summary>
            返序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="format"></param>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.LocationService">
            <summary>
            位置服务
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.LocationService.GetLocationInfoByPoint(cyclonestyle.Models.MapPoint)">
            <summary>
            根据坐标点获取当前所在区域信息
            </summary>
            <param name="mapPoint">点位信息</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.LocationService.GetProvniceList">
            <summary>
            获取省份信息列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.LocationService.GetCityListByProvniceId(System.String)">
            <summary>
            根据省ID获取城市列表
            </summary>
            <param name="id">省ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.LocationService.GetAreaInfoListByCityCode(cyclonestyle.Models.SearchAreaInfoListRequestModel)">
            <summary>
            根据市ID检索区域信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.LocationService.GetHotCityList">
            <summary>
            获取全国热门城市列表，按省排列，每个省去前3个城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.LocationService.SearchCityByKeyWords(System.String)">
            <summary>
            检索城市by关键字
            </summary>
            <param name="q">关键字，汉子或拼音</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.MembersExService">
            <summary>
            用户扩展信息服务
            常用地址，常用联系人等与用户相关的一些方法
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.RsSaveTraveller(cyclonestyle.Models.Traveller)">
            <summary>
            新增/编辑 常用旅客 
            </summary>
            <param name="travellerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.RsGetTravellerInfoByfkid(cyclonestyle.Models.GetUserExInfoListRequest)">
            <summary>
            获取常旅客信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.RsSetTravellertoUndefault(System.String)">
            <summary>
            将FKID下的常旅客的地址全部设置为非默认
            </summary>
            <param name="fkid"></param>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.RsGetTravellerDefaultCount(System.String)">
            <summary>
            根据查看的默认常用旅客数量从而可以获取当前FKID下是否有历史数据
            </summary>
            <param name="fkid"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.SetTravellerToDefault(System.String)">
            <summary>
            设置旅客为默认常用旅客
            </summary>
            <param name="id">常用旅客的ID</param> 
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.DelTraveller(System.String)">
            <summary>
            删除常用旅客（物理删除）
            如果删除的是默认常用旅客，[则将当前用户最近编辑的一条这是为默认旅客（如果有的话）]
            </summary>
            <param name="id">常用旅客id</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.DelAddress(System.String)">
            <summary>
            删除常用地址（物理删除）
            如果删除的时候默认地址，[则将当前用户最近编辑的一条这是为默认地址（如果有的话）]
            </summary>
            <param name="id">地址id</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.SetAddressToDefault(System.String)">
            <summary>
            设置某地址为默认地址
            </summary>
            <param name="id">地址id</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.EditAddress(cyclonestyle.Models.AddressInfoModel)">
            <summary>
            添加或编辑常用地址
            </summary>
            <param name="addressinfo">地址信息</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersExService.GetAddressListByFkId(cyclonestyle.Models.GetUserExInfoListRequest)">
            <summary>
            获取常用地址，如果没有匹配的常用地址则返回长度为空的集合
            </summary>
            <param name="condtion">请求中的id或者fkId 二选一必填一项</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.MembersService">
            <summary>
            会员，以及会员组织服务
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.MembersService.MemberBaseInfo">
            <summary>
            会员基础信息
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.MembersService.memberInfo">
            <summary>
            会员完整信息
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.GetMemberBaseInfo(cyclonestyle.Models.GetMembersInfoRequestModel)">
            <summary>
            获取用户基础信息
            </summary>
            <param name="condtion">用户ID与组织ID，传入组织ID会对用户所属部门产生影响</param>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.GetMemberInfo(cyclonestyle.Models.GetMembersInfoRequestModel)">
            <summary>
            获取用户详情
            </summary>
            <param name="condtion"></param>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.EditMemberBaseInfo(cyclonestyle.Models.MembersBaseInfoModel)">
            <summary>
            编辑用户基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.GetMemberNumofDep(cyclonestyle.Models.MembersBaseInfoModel)">
            <summary>
            计算用户所属组织与部门统计
            </summary>
            <param name="user">用户信息，其中的userDepartmentList属性不能为空</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.RegisterMembers(cyclonestyle.Models.RegisterMembersRequestModel)">
            <summary>
            会员自助注册
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.CheckMemberLoginNameandPwd(cyclonestyle.Models.RequestUserLogoModel)">
            <summary>
            用户登录验证
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.SearchMembersList(cyclonestyle.Models.SearchMembersRequestModel)">
            <summary>
            会员检索
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.GetMembersList(cyclonestyle.Models.GetMembersListRequstModel)">
            <summary>
            根据用户的ID，登录名或者部门获取用户列表（不翻页，可用于发送短信，推送，批量设置用户等操作）
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.CheckDepartmentCationNumInRootList(System.String,System.String)">
            <summary>
            检查组织名称在跟节点中出现的次数
            </summary>
            <param name="caption">部门名称</param>
            <param name="departmentid">如果是编辑状态时，可排除当前被编辑的部门ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.CreateDepartment(cyclonestyle.Models.CreateMembersDepartmentReqeustModel)">
            <summary>
            新增一个部门/组织，顶级部门名称不能再数据库中重复
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.EditOrgBaseInfo(cyclonestyle.Models.EditOrgInfoRequestModel)">
            <summary>
            编辑组织基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.EditDepBaseInfo(cyclonestyle.Models.EditDepInfoRequestModel)">
            <summary>
            编辑部门基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.DelDepartmentById(System.String)">
            <summary>
            标记删除部门/组织，可一次标记删除多个（非递归）
            </summary>
            <param name="ids">多个ID用,隔开</param>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.MembersService.departmentslist">
            <summary>
            部门列表
            </summary>
        </member>
        <member name="P:cyclonestyle.BLL.MembersService.searchdepartmentscondtion">
            <summary>
            检索部门请求参数
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.SearchDepartments(cyclonestyle.Models.SearchMemberDepartmentRequst)">
            <summary>
            平铺方式检索部门信息（不翻页用于获取某组织下部门）
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.MembersService.departmenttree">
            <summary>
            部门树
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.SearchDepartmentsTree(cyclonestyle.Models.SearchMemberDepartmentRequst)">
            <summary>
            获取组织/部门树
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.getchlidDepartments(cyclonestyle.Models.MemberDepartmentBaseInfoModel)">
            <summary>
            递归获取部门子集
            </summary>
            <param name="d"></param>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.SearchRootDepartments(cyclonestyle.Models.SearchMemberRootDepartmentRequest)">
            <summary>
            检索根组织(可翻页，后台列表与企业名片数据展示)
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.MembersService.orgInfo">
            <summary>
            组织详情
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.GetOrgBaseInfo(System.String)">
            <summary>
            获取组织基础信息
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.MembersService.depInfo">
            <summary>
            部门详情
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.GetDepBaseInfo(cyclonestyle.Models.GetDepInfoRequestModel)">
            <summary>
            获取部门基础信息
            </summary>
            <param name="condtion"></param>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.SetMemberDepartments(cyclonestyle.Models.SetMemberDepartmentsRequestModel)">
            <summary>
            设置用户的部门
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.SetDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            增加部门的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.EditDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            编辑部门下的用户信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.MembersService.DelDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            移除部门下的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.PublicResourceService">
            <summary>
            公用资源管理服务，用户输入项、等
            </summary>
        </member>
        <member name="P:cyclonestyle.BLL.PublicResourceService.UserInputRule">
            <summary>
            用户输入规范
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.SaveUserInputRule">
            <summary>
            新增/保存一条用户输入规范
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.SearchUserInputRuleList(cyclonestyle.Models.SearchResourceUserInputRuleRequestModel)">
            <summary>
            获取用户输入规范项列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.DelUserInputRules(cyclonestyle.Models.DelResourceUserInputRulesReqeust)">
            <summary>
            标记删除用户输入规范项
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.GetUserInputRuleTypes">
            <summary>
            获取已有的输入类型集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.PublicResourceService.CatInfo">
            <summary>
            分类树信息
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.SaveCatInfo">
            <summary>
            新增/保存分类树节点
            </summary>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.PublicResourceService.SearchCatInfoCondtion">
            <summary>
            查询请求
            </summary>
        </member>
        <member name="P:cyclonestyle.BLL.PublicResourceService.SearchCatInfoListReplay">
            <summary>
            分类树返回集合
            </summary>
        </member>
        <member name="P:cyclonestyle.BLL.PublicResourceService.SearchCatTreeListReplay">
            <summary>
            分类树返回树形集合体
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.PublicResourceService.Dep">
            <summary>
            当前深度
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.GetCatInfoById(System.String)">
            <summary>
            获取分类树信息
            </summary>
            <param name="id">分类信息ID</param>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.SearchCatInfoList">
            <summary>
            查询分类树集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.GetCatChildInfo(cyclonestyle.Models.CatInfoModel)">
            <summary>
            获取子集信息
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.SearchCatTreeList">
            <summary>
            查询分类树树形集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.GetCatChildTreeInfo(System.String)">
            <summary>
            获取树的子节点
            </summary>
            <param name="Id">ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.DelCatInfoAndChilds">
            <summary>
            标记删除分类树及其他的子集
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.EditExInfo(cyclonestyle.Models.EditInfoExInfoRequestModel)">
            <summary>
            新增或编辑用户扩展信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PublicResourceService.DelExInfo(cyclonestyle.Models.EditInfoExInfoRequestModel)">
            <summary>
            标记删除用户扩展信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.PushService">
            <summary>
            推送服务
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.PushService.UpdateMemberGetuiPushSet(cyclonestyle.Models.GeTuiSetModel,System.String)">
            <summary>
            更新用户的个推设置
            系统会自动将数据库中其他相同的推送设置清空，避免当同一个设备登录不同的账号后历史登录的账号收到推送消息
            </summary>
            <param name="condtion"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PushService.SendGTuiPushByPusSets(cyclonestyle.Models.SendGeTuiPushBySetRequestModel)">
            <summary>
            发送个推信息【可批量，支持IOS和安卓 批量与单个用户，通知与传透】
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PushService.SendGTuiPushByUsersList(cyclonestyle.Models.SendGeTuiPushByUsersIdRequestModel)">
            <summary>
            发送个推信息【按用户列表进行发送】【可批量，支持IOS和安卓 批量与单个用户，通知与传透】
            程序可自动判定这些用户是否有推送设置，如果有才会提交推送平台进行发送
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.PushService.SearchPushHistoryList(cyclonestyle.Models.SearchSentPushListRequestModel)">
            <summary>
            获取历史推送
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.BLL.SysManagerService">
            <summary>
            后台角色、权限、模块服务
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.GetSysRoleList(cyclonestyle.Models.RequestBase)">
            <summary>
            获取后台系统角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.GetSysRoleAllRowsList">
            <summary>
            获取后台全部角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.SysManagerService.UserRole">
            <summary>
            系统角色
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.GetRole(System.Int64)">
            <summary>
            根据ID获取角色信息
            </summary>
            <param name="RoleId"></param>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SaveRole">
            <summary>
            保存角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.DelRole">
            <summary>
            删除角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.SysManagerService.SysMenu">
            <summary>
            系统菜单对象
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.ChangeSysMenuPid(cyclonestyle.Models.RequestChangeSysMenuPidModel)">
            <summary>
            调整系统菜单对象父节点ID
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.GetSysMenuList">
            <summary>
            获取系统菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.DelSysMenusByIds(System.String)">
            <summary>
            批量删除系统菜单项
            </summary>
            <param name="Ids"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SaveMenu">
            <summary>
            保存或新增系统菜单
            </summary>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.SysManagerService.SearchMenuCondtion">
            <summary>
            菜单查询请求参数
            </summary>
        </member>
        <member name="F:cyclonestyle.BLL.SysManagerService.dep">
            <summary>
            当前深度
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.GetSysMenuTreeModel">
            <summary>
            查询树模型--递归入口，需先设置SearchMenuCondtion项
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.GetChildMenuModel(cyclonestyle.Models.SysMenuTreeModel)">
            <summary>
            递归获取菜单子节点
            </summary>
            <param name="treeModel"></param>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.SysManagerService.SysUserInfo">
            <summary>
            系统用户信息
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SaveUser">
            <summary>
            保存用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SearchSysUserList(cyclonestyle.Models.RequestSysUserListModel)">
            <summary>
            查询系统用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.GetSysUser(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="Id">用户Id</param>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.DelSysUser">
            <summary>
            删除用户（标记删除）
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.ReSetUserPwd">
            <summary>
            重置用户密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SysUserLogon(cyclonestyle.Models.RequestUserLogoModel)">
            <summary>
            系统用户登录验证
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.ChangeSysUserPwd(cyclonestyle.Models.RequestChangeUserPwdModel)">
            <summary>
            修改系统用户密码
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.CheckLoginNameisExist(System.String,System.String)">
            <summary>
            检查登录名在数据库中出现的次数
            </summary>
            <param name="LoginName">登录名</param>
            <param name="SysUserId">需要排除的用户ID（编辑情况时用户自己）</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.CreateSysUserLog(cyclonestyle.Models.SysUserLogModel)">
            <summary>
            创建系统用户日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SearchSysUserLog(cyclonestyle.Models.RequestSearchSysUserLog)">
            <summary>
            查询系统用户日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="P:cyclonestyle.BLL.SysManagerService.SysUpdateLog">
            <summary>
            系统更新日志
            </summary>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SaveSysUpdateLog">
            <summary>
            保存系统更新日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SearchSysUpdateLog(cyclonestyle.Models.SearchSysUpdateLogRequstModel)">
            <summary>
            查询系统更新日志列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.DelSysUpdateLogById(System.Int64)">
            <summary>
            删除系统更新日志
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SysSaveErrorLogMsg(System.String,System.Object)">
            <summary>
            将信息记录到错误日志
            </summary>
            <param name="errormsg">错误描述</param>
            <param name="condtion">当前方法的请求参数对象</param>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SysSaveSysLog(System.String,cyclonestyle.Models.EnumSysLogType)">
            <summary>
            将信息记录到系统日志
            </summary>
            <param name="Info"></param>
            <param name="logtype"></param>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.SearchSysLog(cyclonestyle.Models.GetSysLogRequestModel)">
            <summary>
            查询系统日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.BLL.SysManagerService.DelSysLog(cyclonestyle.Models.DelSysLogRequestModel)">
            <summary>
            批量删除系统日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiAddressController">
            <summary>
            常用地址管理
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiAddressController.EditAddress(cyclonestyle.Models.AddressInfoModel)">
            <summary>
            添加或编辑常用地址
            </summary>
            <param name="condtion">地址信息</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiAddressController.GetAddressListByFkId(cyclonestyle.Models.GetUserExInfoListRequest)">
            <summary>
            获取常用地址，如果没有匹配的常用地址则返回长度为空的集合
            </summary>
            <param name="condtion">请求中的id或者fkId 二选一必填一项</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiAddressController.SetAddressToDefault(System.String)">
            <summary>
            设置某地址为默认地址
            </summary>
            <param name="Id">地址的ID</param> 
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiAddressController.DelAddress(System.String)">
            <summary>
            删除常用地址（物理删除）
            如果删除的时候默认地址，[则将当前用户最近编辑的一条这是为默认地址（如果有的话）]
            </summary>
            <param name="Id">常用地址的ID</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiDepartmentsController">
            <summary>
            用户组织结构（部门）信息管理
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.GetDepartmentCapitonNum(System.String,System.String)">
            <summary>
            检查当前名称在数据库中出现的次数
            不允许重复创建名称相同的顶级部门
            </summary>
            <param name="caption">组织的名称</param>
            <param name="orgid">需要排除的组织ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.CreateDepartment(cyclonestyle.Models.CreateMembersDepartmentReqeustModel)">
            <summary>
            创建一个部门/组织，创建成功后返被创建的部门的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.SearchDepartments(cyclonestyle.Models.SearchMemberDepartmentRequst)">
            <summary>
            检索部门信息(平铺方式，按递归顺序排序，用户显示部门信息)
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.SearchDepartmentsTree(cyclonestyle.Models.SearchMemberDepartmentRequst)">
            <summary>
            获取部门树
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.GetDepInfo(cyclonestyle.Models.GetDepInfoRequestModel)">
            <summary>
            获取部门详情
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.EditDepInfo(cyclonestyle.Models.EditDepInfoRequestModel)">
            <summary>
            编辑部门基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.SearchRootDepartments(cyclonestyle.Models.SearchMemberRootDepartmentRequest)">
            <summary>
            检索顶级组织列表（用于后台显示所有组织列表）
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.GetOrgInfoById(System.String)">
            <summary>
            获取组织详情
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.EditOrgInfo(cyclonestyle.Models.EditOrgInfoRequestModel)">
            <summary>
            编辑组织基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.DelDepmentById(System.String)">
            <summary>
            删除一个或多个部门/组织
            </summary>
            <param name="Ids">部门或组织的ID，可多个用,隔开</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.SetMemberDepartments(cyclonestyle.Models.SetMemberDepartmentsRequestModel)">
            <summary>
            设置用户所属的部门
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.SetDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            增加部门下的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.EditDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            编辑部门下的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDepartmentsController.DelDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            移除部门下的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiDocumentResourceController">
            <summary>
            资源文档模块（协议、帮助、更新内容等）
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDocumentResourceController.EditDocument(cyclonestyle.Models.DocumentsResourceModel)">
            <summary>
            新增/编辑资源文档
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDocumentResourceController.SearchDocument(cyclonestyle.Models.SearchDocumentsResourceListRequestModel)">
            <summary>
            查询获取文档信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDocumentResourceController.SortDocuments(cyclonestyle.Models.SortDocumentsRequest)">
            <summary>
            文档批量排序及禁用
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDocumentResourceController.GetAllDocumentsGroupInfo">
            <summary>
            获取所有现有的分组信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiDocumentResourceController.DelDocument(System.String)">
            <summary>
            删除文档
            </summary>
            <param name="Id">文档ID</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiEasemobController">
            <summary>
            环信即时通信
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiEasemobController.QueryToken">
            <summary>
            获取环信令牌
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiEasemobController.RegisterUser(cyclonestyle.Models.RegisterUserEasemobRequestModel)">
            <summary>
            注册为环信的新用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiEasemobController.SendMsg(cyclonestyle.Models.EasemobSendTextMessageRequestModel)">
            <summary>
            发送文本消息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiEasemobController.SendImg(cyclonestyle.Models.EasemobSendIMgMessageRequestModel)">
            <summary>
            发送图片消息
            </summary>
            <param name="condtion">请求参数中的 condtion.msg.url 为图片文件在服务器上的保存路径，请先调用WebHome/UploadFile将图片上传到服务器</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiEasemobController.SendAudio(cyclonestyle.Models.EasemobSendAudioMessageRequestModel)">
            <summary>
            发送语音消息
            </summary>
            <param name="condtion">请求参数中的 condtion.msg.url 为语音文件在服务器上的保存路径，请先调用WebHome/UploadFile将语音上传到服务器</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiLocationController">
            <summary>
            地理位置接口
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiLocationController.GetLocationInfoByPoint(cyclonestyle.Models.MapPoint)">
            <summary>
            根据坐标点获取当前所在区域信息
            </summary>
            <param name="mapPoint">当前位置
            {"Lat": "39.888411","Lng": "116.333097"}</param>
            <returns>当前所在位置信息，对象中可能会包含当前所在地的CityId，该CityId来自艺龙网提供的全国省市信息表，可用于酒店相关的查询或者其他需要的地方</returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiLocationController.GetProvniceList">
            <summary>
            获取全国省列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiLocationController.GetCityListByProvniceId(System.String)">
            <summary>
            根据省ID获取城市列表
            </summary>
            <param name="Id">省ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiLocationController.GetAreaInfoListByCityCode(cyclonestyle.Models.SearchAreaInfoListRequestModel)">
            <summary>
            根据市ID检索区域信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiLocationController.GetHotCityList">
            <summary>
            获取全国热门城市列表，按省排列，每个省取前3个城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiLocationController.SearchCityByKeyWords(System.String)">
            <summary>
            根据关键字检索城市列表，最多返回20行结果
            </summary>
            <param name="q">关键字，可以是城市名称以及拼音或拼音首字母，必填，否则返回空集合</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiMembersController">
            <summary>
            会员接口-注册、登陆、详情、找回密码等功能
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.LogOnMembers(cyclonestyle.Models.RequestLogOnMembersModel)">
            <summary>
            会员用户登录
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.LogOutMembers">
            <summary>
            退出登录
            </summary>
            <returns>返回文本 Success</returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.CheckisLogOn">
            <summary>
            检查当前回话是否已验证了用户
            </summary>
            <returns>布尔值，true表示已登录，false表示未登陆</returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.CheckLoginName(System.String)">
            <summary>
            检查登录名出现的次数
            </summary>
            <param name="LoginName">登录名</param>
            <returns>返回出现的次数，如果大于0则表示该登录名已使用</returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.RegisterMembers(cyclonestyle.Models.RegisterMembersRequestModel)">
            <summary>
            会员用户注册
            </summary>
            <param name="condtion">此注册方法中登录名请限制为用户手机号码</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.GetMemberInfo(cyclonestyle.Models.GetMembersInfoRequestModel)">
            <summary>
            获取用户详情
            </summary>
            <param name="condtion">参数中的orgId会影响用户所属部门的值，如果传入orgId则用户的部门只会是该组织下的部门</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.EditMemberBaseInfo(cyclonestyle.Models.MembersBaseInfoModel)">
            <summary>
            编辑用户基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.SearchMembersList(cyclonestyle.Models.SearchMembersRequestModel)">
            <summary>
            会员检索
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.SearchMembersListForcombobox(System.String,System.String,System.String)">
            <summary>
            会员检索（下拉搜索数据）
            </summary>
            <param name="q">关键字,登录名,姓名，手机，昵称</param>
            <param name="orgid">用户所在组织的ID，选填，前台如要检索某一个组织下的用户则必填该项</param>
            <param name="userid">用户的ID</param>
            <returns>返回用户Id+姓名/昵称[登录名]格式数据</returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiMembersController.GetMembersList(cyclonestyle.Models.GetMembersListRequstModel)">
            <summary>
            根据用户的ID，登录名或者部门获取用户列表（不翻页，可用于发送短信，推送，批量设置用户等操作）
            </summary>
            <param name="condtion"></param>
            <returns>如果没有匹配的用户则返回一个长度为空的集合</returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiPublicResourceController">
            <summary>
            通用资源接口，用户输入项管理、分类树等
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.SaveUserInputRule(cyclonestyle.Models.ResourceUserInputRuleModel)">
            <summary>
            新增/编辑用户输入项
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.SearchUserInputRuleList(cyclonestyle.Models.SearchResourceUserInputRuleRequestModel)">
            <summary>
            获取用户规范集列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.DelUserInputRules(cyclonestyle.Models.DelResourceUserInputRulesReqeust)">
            <summary>
            删除用户规范集（标记删除）
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.GetUserInputRuleTypes">
            <summary>
            获取已有的输入类型集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.SaveCatInfo(cyclonestyle.Models.CatInfoModel)">
            <summary>
            新增/保存分类树信息
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.SearchCatInfoList(cyclonestyle.Models.SearchCatInfoRequest)">
            <summary>
            获取分类树集合信息ForGrid
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.SearchCatTreeList(cyclonestyle.Models.SearchCatInfoRequest)">
            <summary>
            获取分类树集合信息ForTree
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.DelCatInfo(cyclonestyle.Models.CatInfoModel)">
            <summary>
            标记删除分类树的节点以及子集
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.SetCatInfoParent(cyclonestyle.Models.CatInfoModel)">
            <summary>
            重新设置分类节点的父ID
            </summary>
            <param name="Info"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.EditExInfo(cyclonestyle.Models.EditInfoExInfoRequestModel)">
            <summary>
            添加/编辑扩展信息
            </summary>
            <param name="condtion">参数中的catinfo中的ID为必填项目</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPublicResourceController.DelMemberExInfo(System.String)">
            <summary>
            删除扩展信息
            </summary>
            <param name="Id">扩展信息的ID</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiPushController">
            <summary>
            推送相关
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPushController.UpdateMemberGetuiPushSet(cyclonestyle.Models.GeTuiSetModel)">
            <summary>
            更新用户的个推设置信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPushController.SendGTuiPushByPushSets(cyclonestyle.Models.SendGeTuiPushBySetRequestModel)">
            <summary>
            发送个推信息【按推送设置进行发送】【可批量，支持IOS和安卓 批量与单个用户，通知与传透】
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPushController.SendGTuiPushByUsersList(cyclonestyle.Models.SendGeTuiPushByUsersIdRequestModel)">
            <summary>
            发送个推信息【按用户列表进行发送】【可批量，支持IOS和安卓 批量与单个用户，通知与传透】
            程序可自动判定这些用户是否有推送设置，如果有才会提交推送平台进行发送
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiPushController.SearchPushHistoryList(cyclonestyle.Models.SearchSentPushListRequestModel)">
            <summary>
            【后台专用】查询已发送的推送历史
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiSysManagerController">
            <summary>
            后台系统-用户、角色，权限，日志，模块接口
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.EditSysUser(cyclonestyle.Models.SysUserModel)">
            <summary>
            添加/编辑系统用户
            </summary>
            <param name="sysuserinfo">用户信息</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.SearchSysUserList(cyclonestyle.Models.RequestSysUserListModel)">
            <summary>
            查询系统用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.DelSysUser(System.String)">
            <summary>
            删除系统用户（标记删除）
            </summary>
            <param name="Id">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.ReSetUserPwd(System.String)">
            <summary>
            重置用户密码（管理员重置其他后台系统用户的密码）
            </summary>
            <param name="Id">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.ChangeSysUserPwd(cyclonestyle.Models.RequestChangeUserPwdModel)">
            <summary>
            修改系统用户登录密码
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.SysUserLogon(cyclonestyle.Models.RequestUserLogoModel)">
            <summary>
            用户登录验证
            </summary>
            <param name="condtion">登陆请求</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.GetSysRoleList(cyclonestyle.Models.RequestBase)">
            <summary>
            获取后台系统角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.GetSysRoleAllRowList">
            <summary>
            获取后台系统全部角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.EditSysRole(cyclonestyle.Models.SysUserRoleModel)">
            <summary>
            添加或编辑系统角色
            </summary>
            <param name="SysRole"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.DelSysRole(System.Int64)">
            <summary>
            删除角色信息
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.EditSysMenu(cyclonestyle.Models.SysMenuModel)">
            <summary>
            保存或新增系统菜单项
            </summary>
            <param name="SysMenu">系统菜单</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.ChangeSysMenuPid(cyclonestyle.Models.RequestChangeSysMenuPidModel)">
            <summary>
            调整系统菜单的父ID
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.DelSysMenus(System.String)">
            <summary>
            删除系统菜单，一次可以删除多个项目
            </summary>
            <param name="Ids"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.GetSysMenuList">
            <summary>
            获取后台菜单列表（ForTreeGrid）
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.GetSysMenuTreeModel(cyclonestyle.Models.RequestSearchSysMenuModel)">
            <summary>
            获取后台系统菜单树模型(ForTreeMenu)
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.SearchSysUserLog(cyclonestyle.Models.RequestSearchSysUserLog)">
            <summary>
            获取用户日志列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.SearchSysLog(cyclonestyle.Models.GetSysLogRequestModel)">
            <summary>
            获取系统运行日志信息列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiSysManagerController.DelSysLog(cyclonestyle.Models.DelSysLogRequestModel)">
            <summary>
            删除系统运行日志信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.ApiTravellerController">
            <summary>
            常用旅客管理
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiTravellerController.GetidTypeData">
            <summary>
            获取idtype枚举信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiTravellerController.RsGetTravellerInfoByfkid(cyclonestyle.Models.GetUserExInfoListRequest)">
            <summary>
            获取常旅客信息
            </summary>
            <param name="condtion">请求中的id或者fkId 二选一必填一项</param>
            <returns>如果该用户没有默认的旅客信息则返回长度为0的数组，每个用户最多只能有一个默认的常旅客信息</returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiTravellerController.RsSaveTraveller(cyclonestyle.Models.Traveller)">
            <summary>
            新增/编辑 常用旅客
            </summary>
            <param name="travellerInfo">常用旅客信息对象</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiTravellerController.SetTravellerToDefault(System.String)">
            <summary>
            设置旅客为默认常用旅客
            </summary>
            <param name="Id">常用旅客的ID</param> 
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.ApiTravellerController.DelTraveller(System.String)">
            <summary>
            删除常用旅客（物理删除）
            如果删除的是默认常用旅客，[则将当前用户最近编辑的一条这是为默认旅客（如果有的话）]
            </summary>
            <param name="Id">常用旅客的ID</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.PCCCDocumentResourceController">
            <summary>
            后台-资源文档管理
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCDocumentResourceController.DocumentsGrid">
            <summary>
            资源文档管理
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCDocumentResourceController.EditorImgFileUpload">
            <summary>
            文本编辑器文件上传
            </summary>
        </member>
        <member name="T:cyclonestyle.Controllers.PCCCMainController">
            <summary>
            呼叫中心核心
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMainController.HelloWord">
            <summary>
            HelloWord
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMainController.LogOn">
            <summary>
            呼叫中心登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMainController.LogOff">
            <summary>
            退出登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMainController.Home">
            <summary>
            呼叫中心（后台主界面）
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMainController.MyWorkPanel">
            <summary>
            工作台
            </summary>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.PCCCMembersController">
            <summary>
            后台，会员用户与组织相关
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.userlist(cyclonestyle.Models.SearchMembersRequestModel)">
            <summary>
            会员用户列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.selecteduserlist(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            会员列表用于选择用户
            </summary>
            <param name="userids">用户ID，多个用,隔开</param>
            <param name="loginname">用户登录名，多个用,隔开</param>
            <param name="depid">部门ID，多个用,隔开</param>
            <param name="getchild">是否获取部门下子集的用户</param>
            <param name="PageId">传入的PageId</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.userdetail(cyclonestyle.Models.GetMembersInfoRequestModel)">
            <summary>
            用户详情
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.orglist">
            <summary>
            会员用户组织列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.orgdetail(System.String)">
            <summary>
            组织详情
            </summary>
            <param name="Id">组织的ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.deplist(cyclonestyle.Models.SearchMemberDepartmentRequst)">
            <summary>
            部门列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.depdetail(System.String)">
            <summary>
            部门详情
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.traveller(cyclonestyle.Models.GetUserExInfoListRequest,System.String)">
            <summary>
            常旅客网格
            </summary>
            <param name="condtion">请求参数</param>
            <param name="callback">网格选择按钮回调界面的ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCMembersController.address(cyclonestyle.Models.GetUserExInfoListRequest,System.String)">
            <summary>
            常用地址网格
            </summary>
            <param name="condtion">请求参数</param>
            <param name="callback">网格选择按钮回调界面的ID</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.PCCCPublicResourceController">
            <summary>
            公共资源管理，公用页面
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCPublicResourceController.UserInputRuleSet(cyclonestyle.Models.SearchResourceUserInputRuleRequestModel)">
            <summary>
            用户输入项维护
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCPublicResourceController.CatTreeSet(cyclonestyle.Models.SearchCatInfoRequest)">
            <summary>
            分类树维护
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCPublicResourceController.selectcity(cyclonestyle.Models.LocationInfoModel,System.String,System.String)">
            <summary>
            省市区联动选择框
            </summary>
            <param name="condtion">省市区信息</param>
            <param name="callback">回调</param>
             <param name="PageId">guid</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.PCCCSmsController">
            <summary>
            手机短消息
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSmsController.pushhistory(cyclonestyle.Models.SearchSentPushListRequestModel)">
            <summary>
            推送历史
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:cyclonestyle.Controllers.PCCCSmsController.sendpushbyusers(System.String,System.String,System.String,System.Boolean,System.String,System.String)" -->
        <member name="T:cyclonestyle.Controllers.PCCCSysMangerController">
            <summary>
            后台系统用户、角色、菜单权限、日志管理
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSysMangerController.RoleSet">
            <summary>
            角色设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSysMangerController.GetRoles">
            <summary>
            获取角色列表
            </summary>
            <returns>角色列表JSON字串</returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSysMangerController.MenuTreeSet">
            <summary>
            系统菜单设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSysMangerController.SysUserSet">
            <summary>
            系统用户设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSysMangerController.SysUserLog(cyclonestyle.Models.RequestSearchSysUserLog)">
            <summary>
            系统用户日志
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSysMangerController.SysLog(cyclonestyle.Models.GetSysLogRequestModel)">
            <summary>
            系统运行日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.PCCCSysMangerController.ExcelSysLog(cyclonestyle.Models.GetSysLogRequestModel)">
            <summary>
            导出系统运行日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Controllers.WebHomeController">
            <summary>
            基础页
            </summary>
        </member>
        <member name="M:cyclonestyle.Controllers.WebHomeController.Index">
            <summary>
            项目首页
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.WebHomeController.AuthorizeError">
            <summary>
            身份验证错误
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.Controllers.WebHomeController.DownloadFile(System.String)">
            <summary>
            通用下载文件
            </summary>
            <param name="Path">完整的文件存放路径（url）</param>
        </member>
        <member name="M:cyclonestyle.Controllers.WebHomeController.UploadFile(System.String)">
            <summary>
            通用上传文件
            </summary>
            <param name="dir">存放于upload目录下的文件夹名 可为空 为空则为user</param>
            <returns>成功返回上传文件的的存放路径(url)，失败返回空字符串</returns>
        </member>
        <member name="T:cyclonestyle.DataBase.MembersExDataBaseManager">
            <summary>
            用户信息扩展专用
            常用地址，常用联系人等与用户相关的一些数据库操作
            </summary>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.RsGetTravellerDefaultCount(System.String)">
             <summary>
            根据查看的默认常用旅客数量从而可以获取当前FKID下是否有历史数据
             </summary>
             <param name="fkid"></param>
             <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.RsGetTravellerInfoByfkid(cyclonestyle.Models.GetUserExInfoListRequest)">
             <summary>
            获取常旅客信息
             </summary>
             <param name="condtion"></param>
             <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.RsSetTravellertoUndefault(System.String)">
            <summary>
            将FKID下的常旅客的全部设置为非默认
            </summary>
            <param name="fkid"></param>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.RsSaveTraveller(cyclonestyle.Models.Traveller)">
            <summary>
            新增/编辑 常用旅客,[isDefault:默认：true,非默认：false]
            </summary>
            <param name="travellerInfo"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.SysDelTraveller(System.String)">
            <summary>
            删除常用旅客
            </summary>
            <param name="id">常用旅客id</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.DelAddress(System.String)">
            <summary>
             删除常用地址（物理删除）
            如果删除的时候默认地址，[则将当前用户最近编辑的一条这是为默认地址（如果有的话）]
            </summary>
            <param name="id">地址id</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.GetAddressListByFkId(cyclonestyle.Models.GetUserExInfoListRequest)">
            <summary>
            获取地址信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.RsGetAddressHaveDefault(System.String)">
            <summary>
            根据fkid查看是否有默认常用地址
            </summary>
            <param name="fkid"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.EditAddress(cyclonestyle.Models.AddressInfoModel)">
            <summary>
            添加或编辑常用地址
            </summary>
            <param name="addressinfo">地址信息</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.MembersExDataBaseManager.RsSetAddresstoUndefault(System.String)">
            <summary>
            将FKID下的地址全部设置为非默认
            </summary>
            <param name="fkid"></param>
        </member>
        <member name="T:cyclonestyle.DataBase.SysSmsDataBaseManager">
            <summary>
            消息相关数据库操作专用
            短信，推送，系统消息等专用
            </summary>
        </member>
        <member name="M:cyclonestyle.DataBase.SysSmsDataBaseManager.MemberUpdateMemberBaiduPushSet(cyclonestyle.Models.BaiduPushSetModel,System.String)">
            <summary>
            更新用户的百度推送设置
            系统会自动将数据库中其他相同的推送设置清空，避免当同一个设备登录不同的账号后历史登录的账号收到推送消息
            </summary>
            <param name="condtion">推送设置</param>
            <param name="userId">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.SysSmsDataBaseManager.MemberGetMemberBaiduPushSetInfo(cyclonestyle.DataBase.Us_SysUser)">
            <summary>
            获取用户的百度推送设置
            </summary>
            <param name="dbuser">数据库对象Us_SysUser</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.SysSmsDataBaseManager.MemberUpdateMemberGetuiPushSet(cyclonestyle.Models.GeTuiSetModel,System.String)">
            <summary>
            更新用户的个推设置信息
            系统会自动将数据库中其他相同的推送设置清空，避免当同一个设备登录不同的账号后历史登录的账号收到推送消息
            </summary>
            <param name="condtion"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.SysSmsDataBaseManager.MemberGetMemberGetuiPushSetInfo(cyclonestyle.DataBase.Us_SysUser)">
            <summary>
            获取用户的个推推送设置
            </summary>
            <param name="dbuser"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.SysSmsDataBaseManager.RunSaveSentPush(cyclonestyle.Models.SendGeTuiPushBySetRequestModel)">
            <summary>
            保存待发送的推送消息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.SysSmsDataBaseManager.RunUpdateSentPushStatus(System.String,cyclonestyle.Models.SendGeTuiPushReplay)">
            <summary>
            更新推送设置的状态与结果
            </summary>
            <param name="pushId">推送的ID</param>
            <param name="r">推送结果信息</param>
        </member>
        <member name="M:cyclonestyle.DataBase.SysSmsDataBaseManager.RunSearchHistoryPushList(cyclonestyle.Models.SearchSentPushListRequestModel)">
            <summary>
            查询推送历史
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.DataBase.BaseSysTemDataBaseManager">
            <summary>
            数据库操作 底层框架与资源相关
            </summary>
        </member>
        <member name="F:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SqlConnection">
            <summary>
            数据连接字串
            </summary>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysGetSysRoleList(cyclonestyle.Models.RequestBase)">
            <summary>
            获取系统角色列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysGetSysRoleAllRowsList">
            <summary>
            获取系统全部角色信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysGetSysRoleListModelById(System.Int64)">
            <summary>
            获取系统角色信息ByRoleId
            </summary>
            <param name="RoleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSaveSysRole(cyclonestyle.Models.SysUserRoleModel)">
            <summary>
            保存/新增一个系统角色
            </summary>
            <param name="sysUserRoleModel"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysGetSysRoleById(System.Int64)">
            <summary>
            获取系统角色信息ByRoleId
            </summary>
            <param name="RoleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysDelSysRole(cyclonestyle.Models.SysUserRoleModel)">
            <summary>
            删除系统角色
            </summary>
            <param name="sysUserRole"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSaveSysMenu(cyclonestyle.Models.SysMenuModel)">
            <summary>
            保存或新增系统菜单
            </summary>
            <param name="sysMenuModel"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysChangeSysMenuPid(cyclonestyle.Models.RequestChangeSysMenuPidModel)">
            <summary>
            修改系统菜单PID
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysGetSysMenuList">
            <summary>
            获取系统菜单项列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSearchSysMenuTreeList(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            获取系统菜单项列表(树)
            </summary>
            <param name="PId">父ID</param>
            <param name="RoleId">角色ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysDelSysMenusByIds(System.Collections.Generic.List{System.Int64})">
            <summary>
            删除系统菜单项
            </summary>
            <param name="condtion">IdList</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSaveSysUser(cyclonestyle.Models.SysUserModel)">
            <summary>
            保存系统用户
            </summary>
            <param name="SysUserInfo"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSearchSysUserList(cyclonestyle.Models.RequestSysUserListModel)">
            <summary>
            查询系统用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysGetSysUserById(System.String)">
            <summary>
            获取系统用户信息
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysDelSysUser(cyclonestyle.Models.SysUserModel)">
            <summary>
            删除用户信息-标记删除
            </summary>
            <param name="SysUserInfo"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysReSetUserPwd(cyclonestyle.Models.SysUserModel)">
            <summary>
            重置用户密码
            </summary>
            <param name="SysUserInfo"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSysUserLogon(cyclonestyle.Models.RequestUserLogoModel)">
            <summary>
            系统用户登录验证
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysChangeSysUserPwd(cyclonestyle.Models.RequestChangeUserPwdModel)">
            <summary>
            修改系统用户密码
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysCheckSysUserLoginNameisExist(System.String,System.String)">
            <summary>
            差价系统用户登录名在数据库中出现的次数
            </summary>
            <param name="LoginName">登录名</param>
            <param name="SysUserId">需要排除的用户ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysCreateSysUserLog(cyclonestyle.Models.SysUserLogModel)">
            <summary>
            创建后台系统用户日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSearchSysUserLog(cyclonestyle.Models.RequestSearchSysUserLog)">
            <summary>
            查询后台系统用户日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSaveSysUpdateLog(cyclonestyle.Models.SysUpdateLogModel)">
            <summary>
            保存系统更新日志
            </summary>
            <param name="sysUpdateLogModel"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSearchSysUpdateLog(cyclonestyle.Models.SearchSysUpdateLogRequstModel)">
            <summary>
            查询系统更新日志列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysDelSysUpdateLogById(System.Int64)">
            <summary>
            删除系统更新日志
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSaveErrorLogMsg(cyclonestyle.DataBase.Us_SysLog)">
            <summary>
            保存系统运行日志
            </summary>
            <param name="dblog"></param>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysSearchSysLog(cyclonestyle.Models.GetSysLogRequestModel)">
            <summary>
            查询系统运行日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.SysDelSysLog(cyclonestyle.Models.DelSysLogRequestModel)">
            <summary>
            批量删除系统运行日志
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSaveDocumentResource(cyclonestyle.Models.DocumentsResourceModel)">
            <summary>
            新增/编辑文档资源
            </summary>
            <param name="documentsResourceModel"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSearchDocumentResource(cyclonestyle.Models.SearchDocumentsResourceListRequestModel)">
            <summary>
            查询文档资源
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsDelDocumentResource(System.String)">
            <summary>
            删除文档资源
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSortDocumentsResource(cyclonestyle.Models.SortDocumentsRequest)">
            <summary>
            批量排序及禁用文档资源
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetAllDocumentsResourceGroupInfoList">
            <summary>
            获取所有已存在的分组信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSaveUserInputRule(cyclonestyle.Models.ResourceUserInputRuleModel)">
            <summary>
            新增/保存用户录入资源项目
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSearchUserInputRuleList(cyclonestyle.Models.SearchResourceUserInputRuleRequestModel)">
            <summary>
            获取用户输入规范项目列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsDelUserInputRules(System.Collections.Generic.List{System.String})">
            <summary>
            批量删除用户资源集合
            </summary>
            <param name="Ids"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetUserInputRuleTypes">
            <summary>
            获取已有的输入类型集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSaveCatInfo(cyclonestyle.Models.CatInfoModel)">
            <summary>
            新增/保存分类树
            </summary>
            <param name="catInfoModel"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetCatInfoById(System.String)">
            <summary>
            获取分类树节点信息
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSearchCatInfoList(cyclonestyle.Models.SearchCatInfoRequest)">
            <summary>
            查询分类树节点
            </summary>
            <param name="searchCatInfoRequest"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsDelCatTree(System.Collections.Generic.List{System.String})">
            <summary>
            标记删除分类树节点
            </summary>
            <param name="Ids"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetExInfoList(System.String)">
            <summary>
            获取扩展信息集
            </summary>
            <param name="fkId">关联的ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsEditExInfo(cyclonestyle.Models.EditInfoExInfoRequestModel)">
            <summary>
            新增/编辑扩展信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsDelExInfo(cyclonestyle.Models.EditInfoExInfoRequestModel)">
            <summary>
            标记删除扩展信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetCityIdByCityName(System.String)">
            <summary>
            根据城市名称获取城市ID，如果没有匹配则返回字符串空值
            </summary>
            <param name="citynane"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetProvniceList">
            <summary>
            获取省份信息列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetCityListByProvniceId(System.String)">
            <summary>
            根据省ID获取城市列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetAreaInfoListByCityCode(cyclonestyle.Models.SearchAreaInfoListRequestModel)">
            <summary>
            根据市ID检索区域信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetHotCityList">
            <summary>
            获取全国热门城市列表，按省排列，没省取前三城市
            </summary>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsSearchCityByKeyWords(System.String)">
            <summary>
            检索城市
            </summary>
            <param name="q"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetLocaionInfo(cyclonestyle.Models.LocationInfoModel)">
            <summary>
            获取详情的城市，行政区信息
            </summary>
            <param name="locationInfo"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.RsGetLocaionInfo(cyclonestyle.Models.FullLocationInfoModel)">
            <summary>
            获取详细的城市，行政区以及商圈信息
            </summary>
            <param name="locationInfo"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.MemberRegisterMembers(cyclonestyle.Models.RegisterMembersRequestModel)">
            <summary>
            会员自助注册
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.MemberCheckMemberLoginNameandPwd(cyclonestyle.Models.RequestUserLogoModel)">
            <summary>
            验证登录名及密码
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.MemberGetMemberBaseInfo(cyclonestyle.Models.GetMembersInfoRequestModel)">
            <summary>
            取会员基础数据
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.MemberEditMemberBaseInfo(cyclonestyle.Models.MembersBaseInfoModel)">
            <summary>
            编辑会员基础数据
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.MemberSearchMembersList(cyclonestyle.Models.SearchMembersRequestModel)">
            <summary>
            会员检索
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.MemberGetMemberListByIdsOrLoginName(cyclonestyle.Models.GetMembersListRequstModel)">
            <summary>
            根据用户的Id,或者LoginName获取用户基础信息列表，不翻页
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepGetUserIdListBydepartment(cyclonestyle.Models.SearchMembersRequestModel)">
            <summary>
            根据部门信息获取该部门/组织下所有用户Id
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepCheckDepartmentCationNumInRootList(System.String,System.String)">
            <summary>
            检查组织名称在跟节点中出现的次数
            </summary>
            <param name="caption">部门名称</param>
            <param name="departmentid">如果是编辑状态时，可排除当前被编辑的部门ID</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepCreateDepartment(cyclonestyle.Models.CreateMembersDepartmentReqeustModel)">
            <summary>
            新增一个组织/部门
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepEditOrgBaseInfo(cyclonestyle.Models.EditOrgInfoRequestModel)">
            <summary>
            编辑组织基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepEditDepBaseInfo(cyclonestyle.Models.EditDepInfoRequestModel)">
            <summary>
            编辑部门基础信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepDelDepartmentById(System.String[])">
            <summary>
            标记删除组织/部门
            </summary>
            <param name="id">组织或部门的ID数组</param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepSearchDepartments(cyclonestyle.Models.SearchMemberDepartmentRequst)">
            <summary>
            检索部门
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepSearchRootDepartments(cyclonestyle.Models.SearchMemberRootDepartmentRequest)">
            <summary>
            检索根节点，可翻页用于后台列表
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepGetOrgBaseInfoById(System.String)">
            <summary>
            获取根节点基础信息
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepGetDepBaseInfoById(System.String)">
            <summary>
            获取部门详情
            </summary>
            <param name="depmentid">部门的ID</param>
            <returns>返回部门基础信息与所在组织的ID</returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepSetMemberDepartments(cyclonestyle.Models.SetMemberDepartmentsRequestModel)">
            <summary>
            设置用户的部门
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepSetDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            增加部门的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepEditDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            编辑用户在部门中的信息
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepDelDepartmentMembers(cyclonestyle.Models.SetDepartmentMembersRequestModel)">
            <summary>
            移除部门的用户
            </summary>
            <param name="condtion"></param>
            <returns></returns>
        </member>
        <member name="F:cyclonestyle.DataBase.BaseSysTemDataBaseManager.depRootdepartmentinfo">
            <summary>
            根部门节点的信息
            </summary>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepEditUserDepmentPath(System.Collections.Generic.List{System.String})">
            <summary>
            批量更新用户所在部门路径信息
            </summary>
            <param name="depmentids">部门的ID</param>
        </member>
        <member name="M:cyclonestyle.DataBase.BaseSysTemDataBaseManager.DepGetRootDepartmentInfoBydepId(System.String,System.Boolean)">
            <summary>
            根据部门的ID获取根节点的信息与当前部门的路径
            </summary>
            <param name="departmentId">部门ID</param>
            <param name="clearresuts">是否清空递归参数，默认为false</param>
            <returns></returns>
        </member>
        <member name="T:cyclonestyle.Models.GetUserExInfoListRequest">
            <summary>
            获取常用旅客或者常用地址请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetUserExInfoListRequest.id">
            <summary>
            常用地址或者旅客的ID 可为空
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetUserExInfoListRequest.fkId">
            <summary>
            关联的用户或其他ID 可为空
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetUserExInfoListRequest.onlyDefalut">
            <summary>
            是否只获取默认
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.AddressInfoModel">
            <summary>
            常用地址
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.id">
            <summary>
            主键ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.fkId">
            <summary>
            关联的用户或其他ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.locationInfo">
            <summary>
            城市/行政区信息（所在区域信息）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.address">
            <summary>
            详细地址
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.postCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.linkMan">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.linkPhone">
            <summary>
            联系电话
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.isDefault">
            <summary>
            是否默认地址
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.AddressInfoModel.modifiedOn">
            <summary>
            创建/编辑时间
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestBase">
            <summary>
            基础获取列表请求
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.RequestBase._page">
            <summary>
            默认第一页
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.RequestBase._pagesize">
            <summary>
            默认每页20行
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestBase.Page">
            <summary>
            页码，默认为第1页
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestBase.PageSize">
            <summary>
            每页显示数量，默认为20行
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.ReplayBase">
            <summary>
            基础获取列表返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplayBase.ReturnCode">
            <summary>
            返回状态 0 成功  1 无数据  2 系统错误
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplayBase.ReturnMessage">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumErrorCode">
            <summary>
            系统返回状态
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumErrorCode.Success">
            <summary>
            表示成功
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumErrorCode.EmptyDate">
            <summary>
            验证错误或无数据
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumErrorCode.ServiceError">
            <summary>
            服务器错误
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.Tree">
            <summary>
            标准树
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Tree.id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Tree.text">
            <summary>
            显示的文本
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Tree.attributes">
            <summary>
            树属性节点
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.Tree._state">
            <summary>
            树打开状态
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Tree.state">
            <summary>
            树节点的打开状态默认为open
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Tree.children">
            <summary>
            子节点
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.TreeAttributes">
            <summary>
            树的属性
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.TreeAttributes.Sort">
            <summary>
            排序依据
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.Combobox">
            <summary>
            组合
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Combobox.id">
            <summary>
            值
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Combobox.text">
            <summary>
            显示值
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumSortOrderType">
            <summary>
            通用排序方式
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumSex">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumSex.未知">
            <summary>
            用户还没有维护性别
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumUserIdType">
            <summary>
            证件类型（可配合机票预订）
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserIdType.IdCard">
            <summary>
            身份证
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserIdType.PassProt">
            <summary>
            护照
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserIdType.Officers">
            <summary>
            军官证
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserIdType.soldier">
            <summary>
            士兵证
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserIdType.MTP">
            <summary>
            台胞证
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserIdType.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.CatInfoModel">
            <summary>
            分类信息For列表
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CatInfoModel.id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CatInfoModel.caption">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CatInfoModel.sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CatInfoModel._parentId">
            <summary>
            父ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CatInfoModel.ModifiedOn">
            <summary>
            添加/编辑时间
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.CatInfoModel._state">
            <summary>
            树打开状态
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CatInfoModel.state">
            <summary>
            树节点的打开状态默认为open
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchCatInfoRequest">
            <summary>
            分类树查询请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchCatInfoRequest.Dep">
            <summary>
            查询深度-为空则不限制深度
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchCatInfoRequest._parentId">
            <summary>
            父ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchCatInfoRequest.KeyWords">
            <summary>
            关键字
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchCatInfoRequest.id">
            <summary>
            ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.DocumentsResourceModel">
            <summary>
            资源文档模型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DocumentsResourceModel.DocumentId">
            <summary>
            文档编号ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DocumentsResourceModel.ModifiedOn">
            <summary>
            创建/编辑事件
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DocumentsResourceModel.Caption">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DocumentsResourceModel.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DocumentsResourceModel.Sort">
            <summary>
            排序号
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DocumentsResourceModel.GroupName">
            <summary>
            组
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.DocumentsResourceModel._isdeiabled">
            <summary>
            默认是否禁用为false
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DocumentsResourceModel.IsDisabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchDocumentsResourceListRequestModel">
            <summary>
            查询文档资源请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListRequestModel.DocumentId">
            <summary>
            文档编号ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListRequestModel.GroupName">
            <summary>
            组名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListRequestModel.KeyWords">
            <summary>
            关键字 （文档标题或内容关键字）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListRequestModel.OrderType">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListRequestModel.GetContent">
            <summary>
            获取详情内容 默认 true
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListRequestModel.ContentLength">
            <summary>
            当不获取文档详情内容时，内容文本截取的长度，默认20
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListRequestModel.GetDisabled">
            <summary>
            是否获取已禁用的内容 默认为false
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchDocumentsResourceListReplayModel">
            <summary>
            查询文档列表返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListReplayModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchDocumentsResourceListReplayModel.rowlist">
            <summary>
            列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SortDocumentsRequest">
            <summary>
            文档批量及禁用排序请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SortDocumentsRequest.request">
            <summary>
            排序信息（Sort和IsDisabled有效，其余无效）
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RegisterUserEasemobRequestModel">
            <summary>
            环信注册请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RegisterUserEasemobRequestModel.username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RegisterUserEasemobRequestModel.password">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobTextMesModel">
            <summary>
            文本消息类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobTextMesModel.type">
            <summary>
            消息类型 默认为 文本  txt
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobTextMesModel.msg">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobPicMesModel">
            <summary>
            图片消息类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobPicMesModel.type">
            <summary>
            消息类型 默认为图片 img
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobPicMesModel.url">
            <summary>
            文件上传后返回的URL
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobPicMesModel.filename">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobPicMesModel.secret">
            <summary>
            上传后返回的secret
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobPicMesModel.size">
            <summary>
            图片大小
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobSoundMesModel">
            <summary>
            声音消息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSoundMesModel.type">
            <summary>
            消息类型 默认为 audio
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSoundMesModel.url">
            <summary>
            文件上传后返回的URL
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSoundMesModel.filename">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSoundMesModel.length">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSoundMesModel.secret">
            <summary>
            上传后返回的secret
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobSendTextMessageRequestModel">
            <summary>
            发送文本信息请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSendTextMessageRequestModel.msg">
            <summary>
            文本消息内容
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobSendIMgMessageRequestModel">
            <summary>
            发送图片消息请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSendIMgMessageRequestModel.msg">
            <summary>
            图片消息内容
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobSendAudioMessageRequestModel">
            <summary>
            发送语音消息请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSendAudioMessageRequestModel.msg">
            <summary>
            语音消息内容
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobSendMessageRequestModel">
            <summary>
            发送环信消息基础请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSendMessageRequestModel.target_type">
            <summary>
            users 给用户发消息, chatgroups 给群发消息, chatrooms 给聊天室发消息
            默认 users
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSendMessageRequestModel.target">
            <summary>
            接收的用户，默认为客服
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobSendMessageRequestModel.from">
            <summary>
            发送者
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobUploadFileRequestModel">
            <summary>
            环信服务端上传文件返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobUploadFileRequestModel.uuid">
            <summary>
            文件唯一id，发送消息时需要用到指定是哪个文件
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobUploadFileRequestModel.secret">
            <summary>
            上传成功后返回，发送消息时需要用到。
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobUploadFileRequestModel.filename">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobUploadFileRequestModel.length">
            <summary>
            文件的长度
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobUploadFileRequestModel.imgsize">
            <summary>
            图片文件的大小
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EasemobImgSizeModel">
            <summary>
            图片文件大小
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobImgSizeModel.width">
            <summary>
            宽
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EasemobImgSizeModel.height">
            <summary>
            高
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MapPoint">
            <summary>
            坐标对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MapPoint.lat">
            <summary>
            纬度坐标(小的那个数字)
            39.888411
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MapPoint.lng">
            <summary>
            经度坐标（大的那个数字）
            116.333097
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.PositionSetModel">
            <summary>
            位置设置参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.PositionSetModel.lat">
            <summary>
            纬度
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.PositionSetModel.lng">
            <summary>
            经度
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.PositionSetModel.rat">
            <summary>
            搜索半径，（单位：米）
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MyGeoInfo">
            <summary>
            所在地信息（来自百度地图接口）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MyGeoInfo.status">
            <summary>
            状态
            0	正常
            1	服务器内部错误
            2	请求参数非法
            3	权限校验失败
            4	配额校验失败
            5	ak不存在或者非法
            101	服务禁用
            102	不通过白名单或者安全码不对
            2xx	无权限
            3xx	配额错误
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MyGeoInfo.point">
            <summary>
            坐标点
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MyGeoInfo.formatted_address">
            <summary>
            结构化地址信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MyGeoInfo.business">
            <summary>
            所在商圈信息，如 "人民大学,中关村,苏州街"
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MyGeoInfo.addressComponent">
            <summary>
            详细的地址信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.addressComponent">
            <summary>
            所在区域详情
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.addressComponent.elongcityid">
            <summary>
            elong城市ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.addressComponent.city">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.addressComponent.district">
            <summary>
            区县名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.addressComponent.province">
            <summary>
            省名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.addressComponent.street">
            <summary>
            街道名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.addressComponent.street_number">
            <summary>
            街道门牌号
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GeoCityInfoModel">
            <summary>
            城市信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeoCityInfoModel.CityName">
            <summary>
            城市名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeoCityInfoModel.CityCode">
            <summary>
            城市编号（ID）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeoCityInfoModel.PY">
            <summary>
            拼音首字母
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeoCityInfoModel.PinYin">
            <summary>
            全拼
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeoCityInfoModel.ProvniceInfo">
            <summary>
            所属省份信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchAreaInfoListRequestModel">
            <summary>
            区域检索请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchAreaInfoListRequestModel.CityCode">
            <summary>
            城市Code（CityId）
            【必填项目】
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchAreaInfoListRequestModel._usepagesize">
            <summary>
            默认不使用翻页
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchAreaInfoListRequestModel.UsePageSize">
            <summary>
            是否翻页（默认不使用翻页，不使用翻页则会返回所有满足条件的记录）
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchAreaInfoListRequestModel._t">
            <summary>
            默认为查询行政区
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchAreaInfoListRequestModel.T">
            <summary>
            类型（默认为获取行政区）
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchAreaInfoListRequestModel._q">
            <summary>
            查询默认字符串
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchAreaInfoListRequestModel.q">
            <summary>
            查询关键字
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchAreaInfoListReplayModel">
            <summary>
            检索区域信息返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchAreaInfoListReplayModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchAreaInfoListReplayModel.rows">
            <summary>
            列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GeoAreaInfoModel">
            <summary>
            区域信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeoAreaInfoModel.T">
            <summary>
            类别
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.LocationInfoModel">
            <summary>
            城市行政区
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.LocationInfoModel.cityInfo">
            <summary>
            所在城市
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.LocationInfoModel.District">
            <summary>
            行政区名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.LocationInfoModel.DistrictId">
            <summary>
            行政区ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.FullLocationInfoModel">
            <summary>
            所在区域
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.FullLocationInfoModel.cityInfo">
            <summary>
            所在城市
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.FullLocationInfoModel.District">
            <summary>
            行政区名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.FullLocationInfoModel.DistrictId">
            <summary>
            行政区ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.FullLocationInfoModel.BusinessZone">
            <summary>
            所在商圈
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.FullLocationInfoModel.BusinessZoneId">
            <summary>
            所在商圈ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumAreaType">
            <summary>
            地域分类
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumAreaType.D">
            <summary>
            行政区
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumAreaType.C">
            <summary>
            商业区
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumAreaType.L">
            <summary>
            地标
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumAreaType.A">
            <summary>
            全部
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.CreateMembersDepartmentReqeustModel">
            <summary>
            创建部门请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CreateMembersDepartmentReqeustModel.createdby">
            <summary>
            操作者
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CreateMembersDepartmentReqeustModel.caption">
            <summary>
            部门名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.CreateMembersDepartmentReqeustModel.pid">
            <summary>
            父级部门的ID（可为空，为空则创建一个顶级组织信息）
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchMemberDepartmentBaseRequest">
            <summary>
            部门检索基础项
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentBaseRequest.departmentId">
            <summary>
            部门的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentBaseRequest.ordertype">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentBaseRequest.caption">
            <summary>
            部门的名称（关键字）
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchMemberDepartmentBaseRequest._showdisabled">
            <summary>
            默认不显示已经被禁用的条目
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentBaseRequest.showdisabled">
            <summary>
            是否显示被禁用的条目,设置为true时被禁用的条目也会显示出来,默认为false
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchMemberDepartmentBaseRequest._showontheui">
            <summary>
            默认不显示前端显示设置为false的条目
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentBaseRequest.showontheui">
            <summary>
            是否只显示设置为前端显示的条目，设置为true时，被设置为不在前端显示的条目不会被显示出来，默认为false
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchMemberDepartmentRequst">
            <summary>
            检索部门树信息请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentRequst._parentId">
            <summary>
            父级的ID
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchMemberDepartmentRequst._getchild">
            <summary>
            默认加子集
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentRequst.getchild">
            <summary>
            是否加载子集，默认为false
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchMemberRootDepartmentRequest">
            <summary>
            检索根组织请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberRootDepartmentRequest.page">
            <summary>
            页码信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchMemberRootDepartMentReplay">
            <summary>
            会员顶级组织查询返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberRootDepartMentReplay.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberRootDepartMentReplay.rows">
            <summary>
            列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchMemberDepartmentReplay">
            <summary>
            检索部门/组织返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMemberDepartmentReplay.rows">
            <summary>
            行
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EditOrgInfoRequestModel">
            <summary>
            编辑组织请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditOrgInfoRequestModel.depmentid">
            <summary>
            组织ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditOrgInfoRequestModel.caption">
            <summary>
            组织名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditOrgInfoRequestModel.isdisabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditOrgInfoRequestModel.isshow">
            <summary>
            是否显示在前端网站或APP中显示该企业
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditOrgInfoRequestModel.linkUserId">
            <summary>
            所有者用户ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditOrgInfoRequestModel.modifiedBy">
            <summary>
            编辑者
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.OrgInfoModel">
            <summary>
            组织信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.OrgInfoModel.baseInfo">
            <summary>
            基础信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.OrgInfoModel.exList">
            <summary>
            扩展信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MemberDepartmentInfoModel">
            <summary>
            会员组织信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentInfoModel.linkUserinfo">
            <summary>
            部门所有者
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GetDepInfoRequestModel">
            <summary>
            获取部门详情请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetDepInfoRequestModel.depmentid">
            <summary>
            部门ID（必填）
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.DepInfoModel">
            <summary>
            部门详情
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepInfoModel.baseinfo">
            <summary>
            部门基础信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepInfoModel.children">
            <summary>
            部门的子集
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepInfoModel.orginfo">
            <summary>
            所属组织基础信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EditDepInfoRequestModel">
            <summary>
            编辑部门请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditDepInfoRequestModel.depmentid">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditDepInfoRequestModel.caption">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditDepInfoRequestModel.isdisabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditDepInfoRequestModel.modifiedby">
            <summary>
            创建或编辑的用户ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MemberDepartmentBaseInfoModel">
            <summary>
            部门基础数据
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.depmentid">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.caption">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.memberNum">
            <summary>
            部门下的用户数量
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.memberNumCount">
            <summary>
            组织/部门下的用户总计（包含子部门数量统计）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel._parentId">
            <summary>
            父级ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.isdisabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.isshow">
            <summary>
            是否显示在前端网站或APP中显示该企业（作为组织（根节点）时该值有效）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.modifiedon">
            <summary>
            创建/编辑时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.modifiedby">
            <summary>
            创建或编辑的用户ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.linkuserid">
            <summary>
            当为根节点时，部门的所有者ID
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.MemberDepartmentBaseInfoModel._state">
            <summary>
            是否在树中默认显示为展开,默认设置为open
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentBaseInfoModel.state">
            <summary>
            是否在树中默认显示为展开 open 为展开 close为不展开，默认为open
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SetMemberDepartmentsRequestModel">
            <summary>
            设置用户的部门请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SetMemberDepartmentsRequestModel.userId">
            <summary>
            用户的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SetMemberDepartmentsRequestModel.rootDepartmentId">
            <summary>
            根部门限定，如果传入该值，则当前用户在其他组织下的部门不会被操作
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SetMemberDepartmentsRequestModel.departments">
            <summary>
            用户所属的部门
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SetDepartmentMembersRequestModel">
            <summary>
            设置部门的用户请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SetDepartmentMembersRequestModel.departmentId">
            <summary>
            部门的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SetDepartmentMembersRequestModel.users">
            <summary>
            部门下的用户设置
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MemberDepartmentSetRequestInfoModel">
            <summary>
            设置用户所属部门设置参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentSetRequestInfoModel.departmentId">
            <summary>
            部门的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberDepartmentSetRequestInfoModel.isCaption">
            <summary>
            是否为该部门的管理员
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.DepartmentMembersSetRequestInfoModel">
            <summary>
            设置部门下用户的设置参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepartmentMembersSetRequestInfoModel.userId">
            <summary>
            用户的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepartmentMembersSetRequestInfoModel.isCaption">
            <summary>
            是否为该部门的管理员
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.DepartmentsrootParentInfoModel">
            <summary>
            部门的根接单信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepartmentsrootParentInfoModel.departmentId">
            <summary>
            部门的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepartmentsrootParentInfoModel.orgId">
            <summary>
            部门的根部门信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepartmentsrootParentInfoModel.path">
            <summary>
            当前部门的路径
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DepartmentsrootParentInfoModel.pathText">
            <summary>
            当前部门的路径，显示值
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.UserDepartmentInfoList">
            <summary>
            用户所在部门的信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.UserDepartmentInfoList.isCaption">
            <summary>
            是否是部门的主管
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EditUserDepartmentsPathRequestModel">
            <summary>
            批量更新用户所在部门路径字段（用于修改组织/部门或调整部门位置后）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditUserDepartmentsPathRequestModel.orgId">
            <summary>
            组织ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditUserDepartmentsPathRequestModel.departments">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestLogOnMembersModel">
            <summary>
            会员用户登录请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestLogOnMembersModel.DeviceInfo">
            <summary>
            登陆设备信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RegisterMembersRequestModel">
            <summary>
            会员用户注册请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RegisterMembersRequestModel.LoginName">
            <summary>
            用户注册请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RegisterMembersRequestModel.PassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RegisterMembersRequestModel.IpAddress">
            <summary>
            注册时的IP地址
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RegisterMembersRequestModel.RegisterWay">
            <summary>
            注册渠道
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RegisterMembersReplayModel">
            <summary>
            会员用户注册返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RegisterMembersReplayModel.UserInfo">
            <summary>
            注册成功后返回用户基本信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GetMembersInfoRequestModel">
            <summary>
            获取用户详情请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetMembersInfoRequestModel.userId">
            <summary>
            用户ID（必填）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetMembersInfoRequestModel.orgId">
            <summary>
            组织ID（后台非必填，前台必填）
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchMembersRequestModel">
            <summary>
            检索会员请求
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchMembersRequestModel._ordertype">
            <summary>
            默认按时间降序排序
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersRequestModel.ordertype">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersRequestModel.keyWords">
            <summary>
            登录名,姓名,电话,昵称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersRequestModel.userId">
            <summary>
            用户的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersRequestModel.orgId">
            <summary>
            用户根组织限定设置
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SearchMembersRequestModel._getOtherOrgDepartmentInfo">
            <summary>
            是否获取该用户在其他组织的信息 默认为false
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersRequestModel.getOtherOrgDepartmentInfo">
            <summary>
            是否获取该用户在其他组织的信息，若要此值生效orgId必传，默认为false，用户端请设置为false，后台请设置为true，
            此属性涉及用户所属组织的相关返回值
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersRequestModel.departmentIds">
            <summary>
            部门限定
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GetMembersListRequstModel">
            <summary>
            获取会员列表请求（不翻页可按多个用户ID、登录名、部门ID获取用户信息列表）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetMembersListRequstModel.userIds">
            <summary>
            用户ID集合
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetMembersListRequstModel.loginNames">
            <summary>
            登录名集合
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetMembersListRequstModel.depIds">
            <summary>
            部门ID集合
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetMembersListRequstModel.getChilds">
            <summary>
            是否获子部门的用户
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchMembersreplayModel">
            <summary>
            检索会员返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersreplayModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchMembersreplayModel.rows">
            <summary>
            翻页
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MembersBaseInfoModel">
            <summary>
            会员用户基本信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.createdon">
            <summary>
            创建/注册时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.isDisabled">
            <summary>
            是否禁用
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.userDepartmentList">
            <summary>
            用户所在部门信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.numOfDep">
            <summary>
            用户所属公司/部门的数量信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.LoginName">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.MobilePhone">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.Email">
            <summary>
            Email地址
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.FullName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.MembersBaseInfoModel._idtype">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.IdType">
            <summary>
            证件类型，默认为身份证
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.IdCard">
            <summary>
            证件号
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.UserFace">
            <summary>
            头像地址
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.baiduPushSet">
            <summary>
            【留作备用，推送系统使用个推平台】百度推送设置，如果用户没有该信息则返回null值
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersBaseInfoModel.getuiPushSet">
            <summary>
            用户的个推推送设置，如果用户没有该信息则返回null值
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MembersInfoModel">
            <summary>
            用户完整信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersInfoModel.baseInfo">
            <summary>
            用户基础信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MembersInfoModel.exList">
            <summary>
            扩展信息列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.MemberNumOfDepModel">
            <summary>
            用户所属公司/组织的数量
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberNumOfDepModel.numofcompany">
            <summary>
            所属公司的数量（如果该值大于0，则表示该用户为企业用户）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.MemberNumOfDepModel.numofdepartments">
            <summary>
            所在部门的数量
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysUserModel">
            <summary>
            系统用户信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.LoginName">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.FullName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.nickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.JobTitle">
            <summary>
            职位
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.MobilePhone">
            <summary>
            联系电话
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.CreatedOn">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.SysRole">
            <summary>
            角色信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserModel.IsDisabled">
            <summary>
            是否禁用(默认为FALSE)
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestSysUserListModel">
            <summary>
            查询系统用户集请求对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSysUserListModel.KeyWords">
            <summary>
            关键字
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSysUserListModel.RoleId">
            <summary>
            角色
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.ReplaySysUserListModel">
            <summary>
            查询系统用户集返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplaySysUserListModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplaySysUserListModel.UserList">
            <summary>
            列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysUserLogModel">
            <summary>
            系统用户日志事件
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserLogModel.LogId">
            <summary>
            事件ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserLogModel.SysUserId">
            <summary>
            对应用户ID（新增时必填）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserLogModel.SysUserInfo">
            <summary>
            对应用户信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserLogModel.CreatedOn">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserLogModel.Describe">
            <summary>
            事件描述（必填）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserLogModel.FkId">
            <summary>
            外键字段（可能是订单ID，或其他）
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestSearchSysUserLog">
            <summary>
            查询系统用户日期请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSearchSysUserLog.KeyWords">
            <summary>
            关键字
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSearchSysUserLog.SysUserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSearchSysUserLog.BeginDate">
            <summary>
            开始时间--可为空
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSearchSysUserLog.EndDate">
            <summary>
            结束时间--可为空
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.ReplaySearchSysUserLog">
            <summary>
            查询系统用户日志返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplaySearchSysUserLog.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplaySearchSysUserLog.rows">
            <summary>
            日志列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysUserRoleModel">
            <summary>
            后台系统角色
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserRoleModel.RoleDescribe">
            <summary>
            角色描述
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysUserRoleListModel">
            <summary>
            后台角色列表模型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserRoleListModel.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUserRoleListModel.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.ReplaySysUserRoleListModel">
            <summary>
            查询后台系统角色返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplaySysUserRoleListModel.total">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ReplaySysUserRoleListModel.RowList">
            <summary>
            列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysMenuModel">
            <summary>
            系统菜单对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel.MenuId">
            <summary>
            菜单ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel.Name">
            <summary>
            菜单名称
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel._parentId">
            <summary>
            父ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel.Url">
            <summary>
            指向路径
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel.Roles">
            <summary>
            权限
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuModel.ModifiedOn">
            <summary>
            创建/修改时间
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestChangeSysMenuPidModel">
            <summary>
            调整系统菜单对象父节点ID请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestChangeSysMenuPidModel.MenuId">
            <summary>
            节点ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestChangeSysMenuPidModel.ParentId">
            <summary>
            父节点ID，可为空
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestSearchSysMenuModel">
            <summary>
            查询系统菜单请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSearchSysMenuModel.RoleId">
            <summary>
            角色ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSearchSysMenuModel.Dep">
            <summary>
            查询深度-为空则不限制深度
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestSearchSysMenuModel.Pid">
            <summary>
            父ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysMenuTreeModel">
            <summary>
            系统菜单树
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuTreeModel.id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuTreeModel.text">
            <summary>
            显示的文本
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuTreeModel.iconCls">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuTreeModel.attributes">
            <summary>
            属性
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuTreeModel.children">
            <summary>
            子节点
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysMenuTreeAttrModel">
            <summary>
            系统菜单树属性节点
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysMenuTreeAttrModel.Url">
            <summary>
            对应的URL
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EditSysUpdateLogRequestModel">
            <summary>
            新增系统更新日志请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditSysUpdateLogRequestModel.SysUserId">
            <summary>
            创建用户ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditSysUpdateLogRequestModel.LogId">
            <summary>
            日志ID(新增时填0)
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditSysUpdateLogRequestModel.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditSysUpdateLogRequestModel.LogDescribe">
            <summary>
            日志描述
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysUpdateLogModel">
            <summary>
            系统更新日志记录
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUpdateLogModel.CreatedOn">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysUpdateLogModel.CreatedBy">
            <summary>
            创建者
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchSysUpdateLogRequstModel">
            <summary>
            系统更新日志查询请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSysUpdateLogRequstModel.LogType">
            <summary>
            更新类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSysUpdateLogRequstModel.KeyWords">
            <summary>
            关键字
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSysUpdateLogRequstModel.BeginDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSysUpdateLogRequstModel.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchSysUpdateLogReplayModel">
            <summary>
            查询系统更新日志返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSysUpdateLogReplayModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSysUpdateLogReplayModel.rowslist">
            <summary>
            日志列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumUpdateLogType">
            <summary>
            系统更新日志类型
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUpdateLogType.Svr">
            <summary>
            服务器
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUpdateLogType.Android">
            <summary>
            安卓设备
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUpdateLogType.IOS">
            <summary>
            IOS设备
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumSysLogType">
            <summary>
            系统日志类型
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumSysLogType.错误">
            <summary>
            系统在运行时遇到的错误
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumSysLogType.警告">
            <summary>
            一些需要记录的警告
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumSysLogType.通知">
            <summary>
            来自远程服务器的通知（支付宝，机票出票通知等）
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GetSysLogRequestModel">
            <summary>
            查询系统日志请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetSysLogRequestModel.BeginDate">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetSysLogRequestModel.EndDate">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetSysLogRequestModel.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GetSysErrorLogReplayModel">
            <summary>
            查询系统运行日志返回
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetSysErrorLogReplayModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GetSysErrorLogReplayModel.rows">
            <summary>
            列表行
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.DelSysLogRequestModel">
            <summary>
            删除系统运行日志请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DelSysLogRequestModel.rows">
            <summary>
            列表行
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SysErrorLogModel">
            <summary>
            系统运行日志
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysErrorLogModel.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysErrorLogModel.LogType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysErrorLogModel.LogTypeText">
            <summary>
            日志类型（文本）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysErrorLogModel.CreatedOn">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysErrorLogModel.Condtion">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SysErrorLogModel.Errormsg">
            <summary>
            错误内容
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumUserDeviceType">
            <summary>
            推送消息接收设备类型
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserDeviceType.Android">
            <summary>
            安卓手机
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserDeviceType.IOSProduction">
            <summary>
            IOS正式版本
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumUserDeviceType.IOSDeveloper">
            <summary>
            IOS测试版本
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumPushMessagesType">
            <summary>
            推送类型
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumPushMessagesType.通知">
            <summary>
            手机通知栏的通知
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumPushMessagesType.透传消息">
            <summary>
            发送一个通知到客户端手机，对用户完全透明，无振动无响铃 界面无任何变化
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.GeTuiSetModel">
            <summary>
            个推用户设置
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeTuiSetModel.clientId">
            <summary>
            安卓设备为 SDK中的 clientId ， IOS设备为 SDK中的 DeviceToken
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeTuiSetModel.deviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.GeTuiSetModel.userId">
            <summary>
            用户的ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SendGeTuiPushBySetRequestModel">
            <summary>
            发送个推请求[基于个推的设置]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushBySetRequestModel.pushSets">
            <summary>
            接收者信息
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SendGeTuiPushByUsersIdRequestModel">
            <summary>
            发送个推请求[基于用户列表]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushByUsersIdRequestModel.userIds">
            <summary>
            接收用户列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SendGeTuiPushBaseRequestModel">
            <summary>
            发送个推请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushBaseRequestModel.sets">
            <summary>
            接收者信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushBaseRequestModel.messageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushBaseRequestModel.customInfo">
            <summary>
            自定义的内容
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushBaseRequestModel.createdBy">
            <summary>
            发送者，默认为系统管理员
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SendGeTuiPushBaseRequestModel._title">
            <summary>
            默认从配置文件读取项目标题
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushBaseRequestModel.title">
            <summary>
            推送的标题[推荐设置，默认为配置文件中的项目标题，U上商侣]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushBaseRequestModel.msg">
            <summary>
            详细内容[必填]
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SendGeTuiPushReplay">
            <summary>
            发送个推返回参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushReplay.sentResultAndroid">
            <summary>
            发送推送远程返回字串[安卓]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendGeTuiPushReplay.sentResultIos">
            <summary>
            发送推送远程返回字串[IOS]
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchSentPushListRequestModel">
            <summary>
            推送历史查询请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSentPushListRequestModel.beginDate">
            <summary>
            查询开始时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSentPushListRequestModel.endDate">
            <summary>
            查询结束时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSentPushListRequestModel.keyWords">
            <summary>
            标题/内容
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchSentPushListReplayModel">
            <summary>
            推送历史查询返回对象
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSentPushListReplayModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchSentPushListReplayModel.rows">
            <summary>
            行
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SentPushInfoModel">
            <summary>
            历史推送信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.createdOn">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.createdBy">
            <summary>
            创建者信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.messageType">
            <summary>
            信息类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.title">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.msg">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.customInfo">
            <summary>
            推送中自定义的内容
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.sentUserNum">
            <summary>
            接收者用户的数量
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.sentStats">
            <summary>
            发送状态
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.sentResultAndroid">
            <summary>
            远程接口返回结果字串[安卓]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.sentResultIos">
            <summary>
            远程接口返回结果字串[IOS]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoModel.sentUserList">
            <summary>
            接收者详情
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SentPushInfoDetailInfoModel">
            <summary>
            历史推送推送接收者详情
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoDetailInfoModel.sentUserInfo">
            <summary>
            接收者信息，如果采用的是根据设备信息进行的推送那么该值可能为空
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SentPushInfoDetailInfoModel.sentDeviceInfo">
            <summary>
            接收设备的推送参数设置
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.BaiduPushSetModel">
            <summary>
            百度推送设置
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.BaiduPushSetModel.userId">
            <summary>
            用户ID-来自百度推送SDK
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.BaiduPushSetModel.channelId">
            <summary>
            频道ID-来自百度推送SDK
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.BaiduPushSetModel.deviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SendBaiduPushbySetsRequstModel">
            <summary>
            基于百度推送设置的发送推送请求模型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushbySetsRequstModel.sets">
            <summary>
            百度推送设置【必填，可多个】
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SendBaiduPushByUsersRequestModle">
            <summary>
            基于用户来发送推送请求模型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushByUsersRequestModle.userIds">
            <summary>
            接收者的用户ID【必填，可多个】
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SendBaiduPushBaseRequestModel">
            <summary>
            发送基础对象推送
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushBaseRequestModel.set">
            <summary>
            推送接收者的设置
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushBaseRequestModel.createdBy">
            <summary>
            发送者，默认为系统管理员
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.SendBaiduPushBaseRequestModel._title">
            <summary>
            默认从配置文件读取项目标题
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushBaseRequestModel.title">
            <summary>
            推送的标题[推荐设置，默认为配置文件中的项目标题，U上商侣]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushBaseRequestModel.msg">
            <summary>
            详细内容[必填]
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushBaseRequestModel.messageType">
            <summary>
            推送类型(默认为通知)
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushBaseRequestModel.messagesStyle">
            <summary>
            通知样式（0 无声不能清除，1 无声可以清除 4有声音可清除 5 有声音可清除） 默认为5
            【当推送类型为通知时有效】
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SendBaiduPushBaseRequestModel.customInfo">
            <summary>
            自定义内容
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumPushCustomInfo">
            <summary>
            百度推送自定义信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EnumPushCustomInfo.openType">
            <summary>
            对应打开的模块
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EnumPushCustomInfo.id">
            <summary>
            对应的详情信息ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EnumPushCustomOpenType">
            <summary>
            百度推送自定义的打开方式
            </summary>
        </member>
        <member name="F:cyclonestyle.Models.EnumPushCustomOpenType.默认打开应用程序">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.ResourceUserInputRuleModel">
            <summary>
            用户输入规范
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ResourceUserInputRuleModel.RuleId">
            <summary>
            规则ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ResourceUserInputRuleModel.Caption">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ResourceUserInputRuleModel.InputType">
            <summary>
            输入方式
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ResourceUserInputRuleModel.OptionsString">
            <summary>
            可选项，字符串
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ResourceUserInputRuleModel.Sort">
            <summary>
            排序依据，越大越靠前
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ResourceUserInputRuleModel.OptionsList">
            <summary>
            可选项，集合
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.ResourceUserInputRuleModel.ModifiedOn">
            <summary>
            新增/编辑时间
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchResourceUserInputRuleRequestModel">
            <summary>
            获取输入规范集请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchResourceUserInputRuleRequestModel.Ids">
            <summary>
            规范集ID，用,隔开 可为空
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchResourceUserInputRuleRequestModel.ordertype">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.SearchResourceUserInputRuleReplayModel">
            <summary>
            用户输入规范列表集
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchResourceUserInputRuleReplayModel.total">
            <summary>
            总数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.SearchResourceUserInputRuleReplayModel.rows">
            <summary>
            列表
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.DelResourceUserInputRulesReqeust">
            <summary>
            删除用户输入规范项请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.DelResourceUserInputRulesReqeust.rows">
            <summary>
            需要删除的集合
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.EditInfoExInfoRequestModel">
            <summary>
            编辑扩展信息请求参数
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditInfoExInfoRequestModel.fkId">
            <summary>
            关联的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.EditInfoExInfoRequestModel.modifiedBy">
            <summary>
            创建/编辑操作者ID
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.InfoExInfoModel">
            <summary>
            扩展信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.InfoExInfoModel.exInfoId">
            <summary>
            扩展信息ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.InfoExInfoModel.cat">
            <summary>
            信息类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.InfoExInfoModel.detail">
            <summary>
            信息详情
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.InfoExInfoModel.modifiedOn">
            <summary>
            创建/编辑时间
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.InfoExInfoModel.modifyedBy">
            <summary>
            创建/编辑用户
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.Traveller">
            <summary>
            常旅客信息
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Traveller.ravellerId">
            <summary>
            id
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Traveller.fkId">
            <summary>
            关联的用户表或其他表的ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Traveller.fullName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Traveller.idType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Traveller.idCard">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Traveller.isDefault">
            <summary>
            是否默认常旅客 true = 是 false= 否
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.Traveller.modifiedOn">
            <summary>
            创建/修改时间
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestUserLogoModel">
            <summary>
            用户登录请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestUserLogoModel.UserName">
            <summary>
            登录名（用户名）
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestUserLogoModel.UserPassWord">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:cyclonestyle.Models.RequestChangeUserPwdModel">
            <summary>
            修改用户密码请求
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestChangeUserPwdModel.UserId">
            <summary>
            系统用户ID
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestChangeUserPwdModel.OldPassword">
            <summary>
            旧密码
            </summary>
        </member>
        <member name="P:cyclonestyle.Models.RequestChangeUserPwdModel.NewPassword">
            <summary>
            新密码
            </summary>
        </member>
    </members>
</doc>
